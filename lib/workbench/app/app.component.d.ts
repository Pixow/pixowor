import { AfterViewInit, ElementRef, OnDestroy, OnInit, Type, Compiler, Injector, ViewContainerRef, NgZone } from "@angular/core";
import { ContextService } from "./core/services/index";
import { DialogService } from "primeng/dynamicdialog";
import { MenuComponent } from "./slots/menu/menu.component";
import { ActivitybarComponent } from "./slots/activitybar/activitybar.component";
import { PluginConfig } from "./models/index";
import { MessageService } from "primeng/api";
import { StageComponent } from "./slots/stage/stage.component";
import { ExplorerComponent } from "./slots/explorer/explorer.component";
import { ExtensionsComponent } from "./slots/extensions/extensions.component";
import { StatusbarComponent } from "./slots/statusbar/statusbar.component";
export declare class AppComponent implements OnInit, AfterViewInit, OnDestroy {
    private dialogService;
    private contextService;
    private compiler;
    private injector;
    private ngZone;
    private messageService;
    content: ViewContainerRef;
    dialogRef: ViewContainerRef;
    private _destroy;
    display: boolean;
    title: string;
    static instance: AppComponent;
    constructor(dialogService: DialogService, contextService: ContextService, compiler: Compiler, injector: Injector, ngZone: NgZone, messageService: MessageService);
    workbenchMenu: ElementRef<MenuComponent>;
    workbenchActivitybar: ElementRef<ActivitybarComponent>;
    workbenchExplorer: ElementRef<ExplorerComponent>;
    workbenchStage: ElementRef<StageComponent>;
    workbenchExtensions: ElementRef<ExtensionsComponent>;
    workbenchStatusbar: ElementRef<StatusbarComponent>;
    ngOnInit(): void;
    ngAfterViewInit(): void;
    private registPuzzleSlots;
    showDialog(title: string, componentName: string): void;
    destroyDialog(): void;
    private loadPlugins;
    createPlugin(plugin: PluginConfig): Promise<void>;
    injectToSlot(config: any): void;
    registEvents(event: any): void;
    openDialog(componentType: Type<any>): void;
    ngOnDestroy(): void;
}
